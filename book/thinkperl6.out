\BOOKMARK [0][-]{chapter*.1}{Preface}{}% 1
\BOOKMARK [-1][-]{part.1}{I Starting with the Basics}{}% 2
\BOOKMARK [0][-]{chapter.1}{The Way of the Program}{part.1}% 3
\BOOKMARK [1][-]{section.1.1}{What is a Program?}{chapter.1}% 4
\BOOKMARK [1][-]{section.1.2}{Running Perl 6}{chapter.1}% 5
\BOOKMARK [1][-]{section.1.3}{The First Program}{chapter.1}% 6
\BOOKMARK [1][-]{section.1.4}{Arithmetic Operators}{chapter.1}% 7
\BOOKMARK [1][-]{section.1.5}{Values and Types}{chapter.1}% 8
\BOOKMARK [1][-]{section.1.6}{Formal and Natural Languages}{chapter.1}% 9
\BOOKMARK [1][-]{section.1.7}{Debugging}{chapter.1}% 10
\BOOKMARK [1][-]{section.1.8}{Glossary}{chapter.1}% 11
\BOOKMARK [1][-]{section.1.9}{Exercises}{chapter.1}% 12
\BOOKMARK [0][-]{chapter.2}{Variables, Expressions and Statements}{part.1}% 13
\BOOKMARK [1][-]{section.2.1}{Assignment Statements}{chapter.2}% 14
\BOOKMARK [1][-]{section.2.2}{Variable Names}{chapter.2}% 15
\BOOKMARK [1][-]{section.2.3}{Expressions and Statements}{chapter.2}% 16
\BOOKMARK [1][-]{section.2.4}{Script Mode}{chapter.2}% 17
\BOOKMARK [1][-]{section.2.5}{One-Liner Mode}{chapter.2}% 18
\BOOKMARK [1][-]{section.2.6}{Order of Operations}{chapter.2}% 19
\BOOKMARK [1][-]{section.2.7}{String Operations}{chapter.2}% 20
\BOOKMARK [1][-]{section.2.8}{Comments}{chapter.2}% 21
\BOOKMARK [1][-]{section.2.9}{Debugging}{chapter.2}% 22
\BOOKMARK [1][-]{section.2.10}{Glossary}{chapter.2}% 23
\BOOKMARK [1][-]{section.2.11}{Exercises}{chapter.2}% 24
\BOOKMARK [0][-]{chapter.3}{Functions}{part.1}% 25
\BOOKMARK [1][-]{section.3.1}{Function Calls}{chapter.3}% 26
\BOOKMARK [1][-]{section.3.2}{Functions and Methods}{chapter.3}% 27
\BOOKMARK [1][-]{section.3.3}{Math functions}{chapter.3}% 28
\BOOKMARK [1][-]{section.3.4}{Composition}{chapter.3}% 29
\BOOKMARK [1][-]{section.3.5}{Adding New Functions \(a.k.a. Subroutines\)}{chapter.3}% 30
\BOOKMARK [1][-]{section.3.6}{Definitions and Uses}{chapter.3}% 31
\BOOKMARK [1][-]{section.3.7}{Flow of Execution}{chapter.3}% 32
\BOOKMARK [1][-]{section.3.8}{Parameters and Arguments}{chapter.3}% 33
\BOOKMARK [1][-]{section.3.9}{Variables and Parameters Are Local}{chapter.3}% 34
\BOOKMARK [1][-]{section.3.10}{Stack Diagrams}{chapter.3}% 35
\BOOKMARK [1][-]{section.3.11}{Fruitful Functions and Void Functions}{chapter.3}% 36
\BOOKMARK [1][-]{section.3.12}{Function Signatures}{chapter.3}% 37
\BOOKMARK [1][-]{section.3.13}{Immutable and Mutable Parameters}{chapter.3}% 38
\BOOKMARK [1][-]{section.3.14}{Functions and Subroutines as First-Class Citizens}{chapter.3}% 39
\BOOKMARK [1][-]{section.3.15}{Why Functions and Subroutines?}{chapter.3}% 40
\BOOKMARK [1][-]{section.3.16}{Debugging}{chapter.3}% 41
\BOOKMARK [1][-]{section.3.17}{Glossary}{chapter.3}% 42
\BOOKMARK [1][-]{section.3.18}{Exercises}{chapter.3}% 43
\BOOKMARK [0][-]{chapter.4}{Loops, Conditionals, and Recursion}{part.1}% 44
\BOOKMARK [1][-]{section.4.1}{Integer Division and Modulo}{chapter.4}% 45
\BOOKMARK [1][-]{section.4.2}{Boolean Expressions}{chapter.4}% 46
\BOOKMARK [1][-]{section.4.3}{Logical Operators}{chapter.4}% 47
\BOOKMARK [1][-]{section.4.4}{Conditional Execution}{chapter.4}% 48
\BOOKMARK [1][-]{section.4.5}{Alternative Execution}{chapter.4}% 49
\BOOKMARK [1][-]{section.4.6}{Chained Conditionals}{chapter.4}% 50
\BOOKMARK [1][-]{section.4.7}{Nested Conditionals}{chapter.4}% 51
\BOOKMARK [1][-]{section.4.8}{If Conditionals as Statement Modifiers}{chapter.4}% 52
\BOOKMARK [1][-]{section.4.9}{Unless Conditional Statement}{chapter.4}% 53
\BOOKMARK [1][-]{section.4.10}{For Loops}{chapter.4}% 54
\BOOKMARK [1][-]{section.4.11}{Recursion}{chapter.4}% 55
\BOOKMARK [1][-]{section.4.12}{Stack Diagrams for Recursive Subroutines}{chapter.4}% 56
\BOOKMARK [1][-]{section.4.13}{Infinite Recursion}{chapter.4}% 57
\BOOKMARK [1][-]{section.4.14}{Keyboard Input}{chapter.4}% 58
\BOOKMARK [1][-]{section.4.15}{Program Arguments and the MAIN Subroutine}{chapter.4}% 59
\BOOKMARK [1][-]{section.4.16}{Debugging}{chapter.4}% 60
\BOOKMARK [1][-]{section.4.17}{Glossary}{chapter.4}% 61
\BOOKMARK [1][-]{section.4.18}{Exercises}{chapter.4}% 62
\BOOKMARK [0][-]{chapter.5}{Fruitful Subroutines}{part.1}% 63
\BOOKMARK [1][-]{section.5.1}{Return Values}{chapter.5}% 64
\BOOKMARK [1][-]{section.5.2}{Incremental Development}{chapter.5}% 65
\BOOKMARK [1][-]{section.5.3}{Composition}{chapter.5}% 66
\BOOKMARK [1][-]{section.5.4}{Boolean Functions}{chapter.5}% 67
\BOOKMARK [1][-]{section.5.5}{A Complete Programming Language}{chapter.5}% 68
\BOOKMARK [1][-]{section.5.6}{More Recursion}{chapter.5}% 69
\BOOKMARK [1][-]{section.5.7}{Leap of Faith}{chapter.5}% 70
\BOOKMARK [1][-]{section.5.8}{One More Example}{chapter.5}% 71
\BOOKMARK [1][-]{section.5.9}{Checking Types}{chapter.5}% 72
\BOOKMARK [1][-]{section.5.10}{Multi Subroutines}{chapter.5}% 73
\BOOKMARK [1][-]{section.5.11}{Debugging}{chapter.5}% 74
\BOOKMARK [1][-]{section.5.12}{Glossary}{chapter.5}% 75
\BOOKMARK [1][-]{section.5.13}{Exercises}{chapter.5}% 76
\BOOKMARK [0][-]{chapter.6}{Iteration}{part.1}% 77
\BOOKMARK [1][-]{section.6.1}{Assignment Versus Equality}{chapter.6}% 78
\BOOKMARK [1][-]{section.6.2}{Reassignment}{chapter.6}% 79
\BOOKMARK [1][-]{section.6.3}{Updating Variables}{chapter.6}% 80
\BOOKMARK [1][-]{section.6.4}{The while Statement}{chapter.6}% 81
\BOOKMARK [1][-]{section.6.5}{Local Variables and Variable Scoping}{chapter.6}% 82
\BOOKMARK [1][-]{section.6.6}{Control Flow Statements \(last, next, etc.\)}{chapter.6}% 83
\BOOKMARK [1][-]{section.6.7}{Square Roots}{chapter.6}% 84
\BOOKMARK [1][-]{section.6.8}{Algorithms}{chapter.6}% 85
\BOOKMARK [1][-]{section.6.9}{Debugging}{chapter.6}% 86
\BOOKMARK [1][-]{section.6.10}{Glossary}{chapter.6}% 87
\BOOKMARK [1][-]{section.6.11}{Exercises}{chapter.6}% 88
\BOOKMARK [0][-]{chapter.7}{Strings}{part.1}% 89
\BOOKMARK [1][-]{section.7.1}{A String is a Sequence}{chapter.7}% 90
\BOOKMARK [1][-]{section.7.2}{Common String Operators}{chapter.7}% 91
\BOOKMARK [2][-]{subsection.7.2.1}{String Length}{section.7.2}% 92
\BOOKMARK [2][-]{subsection.7.2.2}{Searching For a Substring Within the String}{section.7.2}% 93
\BOOKMARK [2][-]{subsection.7.2.3}{Extracting a Substring from a String}{section.7.2}% 94
\BOOKMARK [2][-]{subsection.7.2.4}{A Few Other Useful String Functions or Methods}{section.7.2}% 95
\BOOKMARK [1][-]{section.7.3}{String Traversal With a while or for Loop}{chapter.7}% 96
\BOOKMARK [1][-]{section.7.4}{Looping and Counting}{chapter.7}% 97
\BOOKMARK [1][-]{section.7.5}{Regular Expressions \(Regexes\)}{chapter.7}% 98
\BOOKMARK [1][-]{section.7.6}{Using Regexes}{chapter.7}% 99
\BOOKMARK [1][-]{section.7.7}{Building your Regex Patterns}{chapter.7}% 100
\BOOKMARK [2][-]{subsection.7.7.1}{Literal Matching}{section.7.7}% 101
\BOOKMARK [2][-]{subsection.7.7.2}{Wildcards and Character Classes}{section.7.7}% 102
\BOOKMARK [2][-]{subsection.7.7.3}{Quantifiers}{section.7.7}% 103
\BOOKMARK [2][-]{subsection.7.7.4}{Anchors and Assertions}{section.7.7}% 104
\BOOKMARK [2][-]{subsection.7.7.5}{Alternation}{section.7.7}% 105
\BOOKMARK [2][-]{subsection.7.7.6}{Grouping and Capturing}{section.7.7}% 106
\BOOKMARK [2][-]{subsection.7.7.7}{Adverbs \(a.k.a. Modifiers\)}{section.7.7}% 107
\BOOKMARK [2][-]{subsection.7.7.8}{Exercises on Regexes}{section.7.7}% 108
\BOOKMARK [1][-]{section.7.8}{Putting It All Together}{chapter.7}% 109
\BOOKMARK [2][-]{subsection.7.8.1}{Extracting Dates}{section.7.8}% 110
\BOOKMARK [2][-]{subsection.7.8.2}{Extracting an IP Address}{section.7.8}% 111
\BOOKMARK [1][-]{section.7.9}{Substitutions}{chapter.7}% 112
\BOOKMARK [2][-]{subsection.7.9.1}{The subst Method}{section.7.9}% 113
\BOOKMARK [2][-]{subsection.7.9.2}{The s/search/replace/ Construct}{section.7.9}% 114
\BOOKMARK [2][-]{subsection.7.9.3}{Using Captures}{section.7.9}% 115
\BOOKMARK [2][-]{subsection.7.9.4}{Adverbs}{section.7.9}% 116
\BOOKMARK [1][-]{section.7.10}{Debugging}{chapter.7}% 117
\BOOKMARK [1][-]{section.7.11}{Glossary}{chapter.7}% 118
\BOOKMARK [1][-]{section.7.12}{Exercises}{chapter.7}% 119
\BOOKMARK [0][-]{chapter.8}{Case Study: Word Play}{part.1}% 120
\BOOKMARK [1][-]{section.8.1}{Reading from and Writing to Files}{chapter.8}% 121
\BOOKMARK [1][-]{section.8.2}{Reading Word Lists}{chapter.8}% 122
\BOOKMARK [1][-]{section.8.3}{Exercises}{chapter.8}% 123
\BOOKMARK [1][-]{section.8.4}{Search}{chapter.8}% 124
\BOOKMARK [2][-]{subsection.8.4.1}{Words Longer Than 20 Characters \(Solution\)}{section.8.4}% 125
\BOOKMARK [2][-]{subsection.8.4.2}{Words with No ``e'' \(Solution\)}{section.8.4}% 126
\BOOKMARK [2][-]{subsection.8.4.3}{Avoiding Other Letters \(Solution\)}{section.8.4}% 127
\BOOKMARK [2][-]{subsection.8.4.4}{Using Only Some Letters \(Solution\)}{section.8.4}% 128
\BOOKMARK [2][-]{subsection.8.4.5}{Using All Letters of a List \(Solution\)}{section.8.4}% 129
\BOOKMARK [2][-]{subsection.8.4.6}{Alphabetic Order \(Solution\)}{section.8.4}% 130
\BOOKMARK [2][-]{subsection.8.4.7}{Another Example of Reduction to a Previously Solved Problem}{section.8.4}% 131
\BOOKMARK [1][-]{section.8.5}{Debugging}{chapter.8}% 132
\BOOKMARK [1][-]{section.8.6}{Glossary}{chapter.8}% 133
\BOOKMARK [1][-]{section.8.7}{Exercises}{chapter.8}% 134
\BOOKMARK [0][-]{chapter.9}{Arrays and Lists}{part.1}% 135
\BOOKMARK [1][-]{section.9.1}{Lists and Arrays Are Sequences}{chapter.9}% 136
\BOOKMARK [1][-]{section.9.2}{Arrays Are Mutable}{chapter.9}% 137
\BOOKMARK [1][-]{section.9.3}{Adding New Elements to an Array or Removing Some}{chapter.9}% 138
\BOOKMARK [1][-]{section.9.4}{Stacks and Queues}{chapter.9}% 139
\BOOKMARK [1][-]{section.9.5}{Other Ways to Modify an Array}{chapter.9}% 140
\BOOKMARK [1][-]{section.9.6}{Traversing a List}{chapter.9}% 141
\BOOKMARK [1][-]{section.9.7}{New Looping Constructs}{chapter.9}% 142
\BOOKMARK [1][-]{section.9.8}{Map, Filter and Reduce}{chapter.9}% 143
\BOOKMARK [2][-]{subsection.9.8.1}{Reducing a List to a Value}{section.9.8}% 144
\BOOKMARK [2][-]{subsection.9.8.2}{The Reduction Metaoperator}{section.9.8}% 145
\BOOKMARK [2][-]{subsection.9.8.3}{Mapping a List to Another List}{section.9.8}% 146
\BOOKMARK [2][-]{subsection.9.8.4}{Filtering the Elements of a List}{section.9.8}% 147
\BOOKMARK [2][-]{subsection.9.8.5}{Higher Order Functions and Functional Programming}{section.9.8}% 148
\BOOKMARK [1][-]{section.9.9}{Fixed-Size, Typed and Shaped Arrays}{chapter.9}% 149
\BOOKMARK [1][-]{section.9.10}{Multidimensional Arrays}{chapter.9}% 150
\BOOKMARK [1][-]{section.9.11}{Sorting Arrays or Lists}{chapter.9}% 151
\BOOKMARK [1][-]{section.9.12}{More Advanced Sorting Techniques}{chapter.9}% 152
\BOOKMARK [1][-]{section.9.13}{Debugging}{chapter.9}% 153
\BOOKMARK [1][-]{section.9.14}{Glossary}{chapter.9}% 154
\BOOKMARK [1][-]{section.9.15}{Exercises}{chapter.9}% 155
\BOOKMARK [0][-]{chapter.10}{Hashes}{part.1}% 156
\BOOKMARK [1][-]{section.10.1}{A Hash is a Mapping}{chapter.10}% 157
\BOOKMARK [1][-]{section.10.2}{Common Operations on Hashes}{chapter.10}% 158
\BOOKMARK [1][-]{section.10.3}{Hash as a Collection of Counters}{chapter.10}% 159
\BOOKMARK [1][-]{section.10.4}{Looping and Hashes}{chapter.10}% 160
\BOOKMARK [1][-]{section.10.5}{Reverse Lookup}{chapter.10}% 161
\BOOKMARK [1][-]{section.10.6}{Testing for Existence}{chapter.10}% 162
\BOOKMARK [1][-]{section.10.7}{Hash Keys Are Unique}{chapter.10}% 163
\BOOKMARK [1][-]{section.10.8}{Hashes and Arrays}{chapter.10}% 164
\BOOKMARK [1][-]{section.10.9}{Memos}{chapter.10}% 165
\BOOKMARK [1][-]{section.10.10}{Hashes as Dispatch Tables}{chapter.10}% 166
\BOOKMARK [1][-]{section.10.11}{Global Variables}{chapter.10}% 167
\BOOKMARK [1][-]{section.10.12}{Debugging}{chapter.10}% 168
\BOOKMARK [1][-]{section.10.13}{Glossary}{chapter.10}% 169
\BOOKMARK [1][-]{section.10.14}{Exercises}{chapter.10}% 170
\BOOKMARK [0][-]{chapter.11}{Case Study: Data Structure Selection}{part.1}% 171
\BOOKMARK [1][-]{section.11.1}{The Ternary Conditional Operator}{chapter.11}% 172
\BOOKMARK [1][-]{section.11.2}{The given ... when ``Switch'' Statement}{chapter.11}% 173
\BOOKMARK [1][-]{section.11.3}{Subroutine Named and Optional Parameters}{chapter.11}% 174
\BOOKMARK [2][-]{subsection.11.3.1}{Named Parameters}{section.11.3}% 175
\BOOKMARK [2][-]{subsection.11.3.2}{Optional Parameters}{section.11.3}% 176
\BOOKMARK [1][-]{section.11.4}{Word Frequency Analysis}{chapter.11}% 177
\BOOKMARK [1][-]{section.11.5}{Random Numbers}{chapter.11}% 178
\BOOKMARK [1][-]{section.11.6}{Word Histogram}{chapter.11}% 179
\BOOKMARK [1][-]{section.11.7}{Most Common Words}{chapter.11}% 180
\BOOKMARK [1][-]{section.11.8}{Optional Parameters}{chapter.11}% 181
\BOOKMARK [1][-]{section.11.9}{Hash Subtraction}{chapter.11}% 182
\BOOKMARK [1][-]{section.11.10}{Constructing New Operators}{chapter.11}% 183
\BOOKMARK [1][-]{section.11.11}{Sets, Bags and Mixes}{chapter.11}% 184
\BOOKMARK [1][-]{section.11.12}{Random Words}{chapter.11}% 185
\BOOKMARK [1][-]{section.11.13}{Markov Analysis}{chapter.11}% 186
\BOOKMARK [1][-]{section.11.14}{Data Structures}{chapter.11}% 187
\BOOKMARK [1][-]{section.11.15}{Building Your Own Data Structures}{chapter.11}% 188
\BOOKMARK [2][-]{subsection.11.15.1}{Linked Lists}{section.11.15}% 189
\BOOKMARK [2][-]{subsection.11.15.2}{Trees}{section.11.15}% 190
\BOOKMARK [2][-]{subsection.11.15.3}{Binary Heaps}{section.11.15}% 191
\BOOKMARK [1][-]{section.11.16}{Debugging}{chapter.11}% 192
\BOOKMARK [1][-]{section.11.17}{Glossary}{chapter.11}% 193
\BOOKMARK [1][-]{section.11.18}{Exercises: Huffman Coding}{chapter.11}% 194
\BOOKMARK [2][-]{subsection.11.18.1}{Variable-Length Codes}{section.11.18}% 195
\BOOKMARK [2][-]{subsection.11.18.2}{The Frequency Table}{section.11.18}% 196
\BOOKMARK [2][-]{subsection.11.18.3}{Building the Huffman Code}{section.11.18}% 197
\BOOKMARK [-1][-]{part.2}{II Moving Forward}{}% 198
\BOOKMARK [0][-]{chapter.12}{Classes and Objects}{part.2}% 199
\BOOKMARK [1][-]{section.12.1}{Objects, Methods and Object-Oriented Programming}{chapter.12}% 200
\BOOKMARK [1][-]{section.12.2}{Programmer-Defined Types}{chapter.12}% 201
\BOOKMARK [1][-]{section.12.3}{Attributes}{chapter.12}% 202
\BOOKMARK [1][-]{section.12.4}{Creating Methods}{chapter.12}% 203
\BOOKMARK [1][-]{section.12.5}{Rectangles and Object Composition}{chapter.12}% 204
\BOOKMARK [1][-]{section.12.6}{Instances as Return Values}{chapter.12}% 205
\BOOKMARK [1][-]{section.12.7}{Inheritance}{chapter.12}% 206
\BOOKMARK [2][-]{subsection.12.7.1}{The Pixel Class}{section.12.7}% 207
\BOOKMARK [2][-]{subsection.12.7.2}{The MovablePoint Class}{section.12.7}% 208
\BOOKMARK [2][-]{subsection.12.7.3}{Multiple Inheritance: Attractive, but Is It Wise?}{section.12.7}% 209
\BOOKMARK [1][-]{section.12.8}{Roles and Composition}{chapter.12}% 210
\BOOKMARK [2][-]{subsection.12.8.1}{Classes and Roles: An Example}{section.12.8}% 211
\BOOKMARK [2][-]{subsection.12.8.2}{Role Composition and Code Reuse}{section.12.8}% 212
\BOOKMARK [2][-]{subsection.12.8.3}{Roles, Classes, Objects, and Types}{section.12.8}% 213
\BOOKMARK [1][-]{section.12.9}{Method Delegation}{chapter.12}% 214
\BOOKMARK [1][-]{section.12.10}{Polymorphism}{chapter.12}% 215
\BOOKMARK [1][-]{section.12.11}{Encapsulation}{chapter.12}% 216
\BOOKMARK [2][-]{subsection.12.11.1}{Private Methods}{section.12.11}% 217
\BOOKMARK [2][-]{subsection.12.11.2}{Constructing Objects with Private Attributes}{section.12.11}% 218
\BOOKMARK [1][-]{section.12.12}{Interface and Implementation}{chapter.12}% 219
\BOOKMARK [1][-]{section.12.13}{Object-Oriented Programming: A Tale}{chapter.12}% 220
\BOOKMARK [2][-]{subsection.12.13.1}{The Fable of the Shepherd}{section.12.13}% 221
\BOOKMARK [2][-]{subsection.12.13.2}{The Moral}{section.12.13}% 222
\BOOKMARK [1][-]{section.12.14}{Debugging}{chapter.12}% 223
\BOOKMARK [2][-]{subsection.12.14.1}{The Perl 6 Debugger}{section.12.14}% 224
\BOOKMARK [2][-]{subsection.12.14.2}{Getting Some Help}{section.12.14}% 225
\BOOKMARK [2][-]{subsection.12.14.3}{Stepping Through the Code}{section.12.14}% 226
\BOOKMARK [2][-]{subsection.12.14.4}{Stopping at the Right Place with Breakpoints}{section.12.14}% 227
\BOOKMARK [2][-]{subsection.12.14.5}{Logging Information with Trace Points}{section.12.14}% 228
\BOOKMARK [2][-]{subsection.12.14.6}{Stepping Through a Regex Match}{section.12.14}% 229
\BOOKMARK [1][-]{section.12.15}{Glossary}{chapter.12}% 230
\BOOKMARK [0][-]{chapter.13}{Regexes and Grammars}{part.2}% 231
\BOOKMARK [1][-]{section.13.1}{A Brief Refresher}{chapter.13}% 232
\BOOKMARK [1][-]{section.13.2}{Declarative Programming}{chapter.13}% 233
\BOOKMARK [1][-]{section.13.3}{Captures}{chapter.13}% 234
\BOOKMARK [1][-]{section.13.4}{Named Rules \(a.k.a. Subrules\)}{chapter.13}% 235
\BOOKMARK [1][-]{section.13.5}{Grammars}{chapter.13}% 236
\BOOKMARK [1][-]{section.13.6}{Grammar Inheritance}{chapter.13}% 237
\BOOKMARK [1][-]{section.13.7}{Actions Objects}{chapter.13}% 238
\BOOKMARK [1][-]{section.13.8}{A grammar for Parsing JSON}{chapter.13}% 239
\BOOKMARK [2][-]{subsection.13.8.1}{The JSON Format}{section.13.8}% 240
\BOOKMARK [2][-]{subsection.13.8.2}{Our JSON Sample}{section.13.8}% 241
\BOOKMARK [2][-]{subsection.13.8.3}{Writing the JSON Grammar Step by Step}{section.13.8}% 242
\BOOKMARK [2][-]{subsection.13.8.4}{The JSON Grammar}{section.13.8}% 243
\BOOKMARK [2][-]{subsection.13.8.5}{Adding Actions}{section.13.8}% 244
\BOOKMARK [1][-]{section.13.9}{Inheritance and Mutable Grammars}{chapter.13}% 245
\BOOKMARK [1][-]{section.13.10}{Debugging}{chapter.13}% 246
\BOOKMARK [1][-]{section.13.11}{Glossary}{chapter.13}% 247
\BOOKMARK [1][-]{section.13.12}{Exercise: A Grammar for an Arithmetic Calculator}{chapter.13}% 248
\BOOKMARK [0][-]{chapter.14}{Functional Programming in Perl}{part.2}% 249
\BOOKMARK [1][-]{section.14.1}{Higher-Order Functions}{chapter.14}% 250
\BOOKMARK [2][-]{subsection.14.1.1}{A Refresher on Functions as First-Class Objects}{section.14.1}% 251
\BOOKMARK [2][-]{subsection.14.1.2}{Anonymous Subroutines and Lambdas}{section.14.1}% 252
\BOOKMARK [2][-]{subsection.14.1.3}{Closures}{section.14.1}% 253
\BOOKMARK [1][-]{section.14.2}{List Processing and Pipeline Programming}{chapter.14}% 254
\BOOKMARK [2][-]{subsection.14.2.1}{Feed and Backward Feed Operators}{section.14.2}% 255
\BOOKMARK [2][-]{subsection.14.2.2}{The Reduction Metaoperator}{section.14.2}% 256
\BOOKMARK [2][-]{subsection.14.2.3}{The Hyperoperator}{section.14.2}% 257
\BOOKMARK [2][-]{subsection.14.2.4}{The Cross \(X\) and Zip \(Z\) Operators}{section.14.2}% 258
\BOOKMARK [2][-]{subsection.14.2.5}{List Operators, a Summary}{section.14.2}% 259
\BOOKMARK [2][-]{subsection.14.2.6}{Creating New Operators}{section.14.2}% 260
\BOOKMARK [1][-]{section.14.3}{Creating Your Own Map-Like Functions}{chapter.14}% 261
\BOOKMARK [2][-]{subsection.14.3.1}{Custom Versions of map, grep, etc.}{section.14.3}% 262
\BOOKMARK [2][-]{subsection.14.3.2}{Our Own Version of a Sort Function}{section.14.3}% 263
\BOOKMARK [2][-]{subsection.14.3.3}{An Iterator Version of map}{section.14.3}% 264
\BOOKMARK [2][-]{subsection.14.3.4}{An Iterator Version of grep}{section.14.3}% 265
\BOOKMARK [1][-]{section.14.4}{The gather and take Construct}{chapter.14}% 266
\BOOKMARK [1][-]{section.14.5}{Lazy Lists and the Sequence Operator}{chapter.14}% 267
\BOOKMARK [2][-]{subsection.14.5.1}{The Sequence Operator}{section.14.5}% 268
\BOOKMARK [2][-]{subsection.14.5.2}{Infinite Lists}{section.14.5}% 269
\BOOKMARK [2][-]{subsection.14.5.3}{Using an Explicit Generator}{section.14.5}% 270
\BOOKMARK [1][-]{section.14.6}{Currying and the Whatever Operator}{chapter.14}% 271
\BOOKMARK [2][-]{subsection.14.6.1}{Creating a Curried Subroutine}{section.14.6}% 272
\BOOKMARK [2][-]{subsection.14.6.2}{Currying an Existing Subroutine with the assuming Method}{section.14.6}% 273
\BOOKMARK [2][-]{subsection.14.6.3}{Currying with the Whatever Star Parameter}{section.14.6}% 274
\BOOKMARK [1][-]{section.14.7}{Using a Functional Programming Style}{chapter.14}% 275
\BOOKMARK [2][-]{subsection.14.7.1}{The Merge Sort Algorithm}{section.14.7}% 276
\BOOKMARK [2][-]{subsection.14.7.2}{A Non-Functional Implementation of Merge Sort}{section.14.7}% 277
\BOOKMARK [2][-]{subsection.14.7.3}{A Functional Implementation of Merge Sort}{section.14.7}% 278
\BOOKMARK [1][-]{section.14.8}{Debugging}{chapter.14}% 279
\BOOKMARK [1][-]{section.14.9}{Glossary}{chapter.14}% 280
\BOOKMARK [1][-]{section.14.10}{Exercise: Quick Sort}{chapter.14}% 281
\BOOKMARK [0][-]{chapter.15}{Some Final Advice}{part.2}% 282
\BOOKMARK [1][-]{section.15.1}{Make it Clear, Keep it Simple}{chapter.15}% 283
\BOOKMARK [1][-]{section.15.2}{Dos and Don'ts}{chapter.15}% 284
\BOOKMARK [1][-]{section.15.3}{Use Idioms}{chapter.15}% 285
\BOOKMARK [1][-]{section.15.4}{What's Next?}{chapter.15}% 286
\BOOKMARK [0][-]{appendix.A}{Solutions to the Exercises}{part.2}% 287
\BOOKMARK [1][-]{section.A.1}{Exercises of Chapter 3: Functions and Subroutines}{appendix.A}% 288
\BOOKMARK [2][-]{subsection.A.1.1}{Exercise 3.1: Subroutine right-justify \(p. 46\)}{section.A.1}% 289
\BOOKMARK [2][-]{subsection.A.1.2}{Exercise 3.2: Subroutine do-twice \(p. 46\)}{section.A.1}% 290
\BOOKMARK [2][-]{subsection.A.1.3}{Exercise 3.3: Subroutine print-grid \(p. 47\)}{section.A.1}% 291
\BOOKMARK [1][-]{section.A.2}{Exercises of Chapter 4: Conditionals and Recursion}{appendix.A}% 292
\BOOKMARK [2][-]{subsection.A.2.1}{Subroutine do-n-times, Exercise Suggested in Section 4.12 \(p. 61\)}{section.A.2}% 293
\BOOKMARK [2][-]{subsection.A.2.2}{Exercise 4.1: Days, Hours, Minutes, and Seconds \(p. 65\)}{section.A.2}% 294
\BOOKMARK [2][-]{subsection.A.2.3}{Exercise 4.2: Fermat's Theorem \(p. 66\)}{section.A.2}% 295
\BOOKMARK [2][-]{subsection.A.2.4}{Exercise 4.3: Is it a Triangle? \(p. 66\)}{section.A.2}% 296
\BOOKMARK [2][-]{subsection.A.2.5}{Exercise 4.4: The Fibonacci Numbers \(p. 66\)}{section.A.2}% 297
\BOOKMARK [2][-]{subsection.A.2.6}{Exercise 4.5: The recurse Subroutine \(p. 67\)}{section.A.2}% 298
\BOOKMARK [1][-]{section.A.3}{Exercises of Chapter 5: Fruitful Functions}{appendix.A}% 299
\BOOKMARK [2][-]{subsection.A.3.1}{Compare, exercise at the end of Section 5.1 \(p. 70\)}{section.A.3}% 300
\BOOKMARK [2][-]{subsection.A.3.2}{Hypotenuse, exercise at the end of Section 5.2 \(p. 72\)}{section.A.3}% 301
\BOOKMARK [2][-]{subsection.A.3.3}{Chained Relational Operators\(in Section 5.4\)}{section.A.3}% 302
\BOOKMARK [2][-]{subsection.A.3.4}{The Ackermann Function \(Exercise 5.2\)}{section.A.3}% 303
\BOOKMARK [2][-]{subsection.A.3.5}{Palindromes \(Exercise 5.3\)}{section.A.3}% 304
\BOOKMARK [2][-]{subsection.A.3.6}{Powers \(Exercise 5.4\)}{section.A.3}% 305
\BOOKMARK [2][-]{subsection.A.3.7}{Finding the GCD of Two Numbers, Exercise 5.5 \(p. 84\)}{section.A.3}% 306
\BOOKMARK [1][-]{section.A.4}{Exercises of Chapter 6 \(Iteration\)}{appendix.A}% 307
\BOOKMARK [2][-]{subsection.A.4.1}{Exercise 6.1: Square Root \(p. 96\)}{section.A.4}% 308
\BOOKMARK [2][-]{subsection.A.4.2}{Exercise 6.2: Pi Estimate \(p. 96\)}{section.A.4}% 309
\BOOKMARK [1][-]{section.A.5}{Exercises of Chapter 7 \(Strings\)}{appendix.A}% 310
\BOOKMARK [2][-]{subsection.A.5.1}{Exercise in Section 7.3: String Traversal \(p. 104\)}{section.A.5}% 311
\BOOKMARK [2][-]{subsection.A.5.2}{Exercise in Section 7.3: The Ducklings \(p. 104\)}{section.A.5}% 312
\BOOKMARK [2][-]{subsection.A.5.3}{Exercise in Section 7.3: Counting the Letters of a String \(p. 104\)}{section.A.5}% 313
\BOOKMARK [2][-]{subsection.A.5.4}{Section 7.5: Simulating a Regex with a Loop \(p. 106\)}{section.A.5}% 314
\BOOKMARK [2][-]{subsection.A.5.5}{Exercises in Subsection 7.7.8: Regex Exercises \(p. 115\)}{section.A.5}% 315
\BOOKMARK [2][-]{subsection.A.5.6}{Exercise in Section 7.10: is-reverse Subroutine \(p. 122\)}{section.A.5}% 316
\BOOKMARK [2][-]{subsection.A.5.7}{Exercise 7.1: Counting Letters \(p. 123\)}{section.A.5}% 317
\BOOKMARK [2][-]{subsection.A.5.8}{Exercise 7.2: Lowercase Letters \(p. 123\)}{section.A.5}% 318
\BOOKMARK [2][-]{subsection.A.5.9}{Exercise 7.3: Caesar's Cipher \(p. 125\)}{section.A.5}% 319
\BOOKMARK [1][-]{section.A.6}{Exercises of Chapter 8 \(Word Play\)}{appendix.A}% 320
\BOOKMARK [2][-]{subsection.A.6.1}{Exercise 8.7: Consecutive Double Letters \(p. 136\)}{section.A.6}% 321
\BOOKMARK [2][-]{subsection.A.6.2}{Exercise 8.8: Palindromes in Odometers \(p. 137\)}{section.A.6}% 322
\BOOKMARK [2][-]{subsection.A.6.3}{Exercise 8.9: Palindromes in Ages \(p. 137\)}{section.A.6}% 323
\BOOKMARK [1][-]{section.A.7}{Exercises of Chapter 9 \(Arrays and Lists\)}{appendix.A}% 324
\BOOKMARK [2][-]{subsection.A.7.1}{Exercise of Section 9.4: Implementing a Queue \(p. 145\)}{section.A.7}% 325
\BOOKMARK [2][-]{subsection.A.7.2}{Exercise of Section 9.5: Other Ways to Modify an Array \(p. 147\)}{section.A.7}% 326
\BOOKMARK [2][-]{subsection.A.7.3}{Exercise of Section 9.8: Mapping and Filtering the Elements of a List \(p. 154\)}{section.A.7}% 327
\BOOKMARK [2][-]{subsection.A.7.4}{Exercise of Section 9.12: Advanced Sorting Techniques \(p. 160\)}{section.A.7}% 328
\BOOKMARK [2][-]{subsection.A.7.5}{Exercise 9.1: Nested Sum \(p. 162\)}{section.A.7}% 329
\BOOKMARK [2][-]{subsection.A.7.6}{Exercise 9.2: Cumulative Sum \(p. 162\)}{section.A.7}% 330
\BOOKMARK [2][-]{subsection.A.7.7}{Exercise 9.3: Middle \(p. 162\)}{section.A.7}% 331
\BOOKMARK [2][-]{subsection.A.7.8}{Exercise 9.4: Chop \(p. 162\)}{section.A.7}% 332
\BOOKMARK [2][-]{subsection.A.7.9}{Exercise 9.5: Subroutine is-sorted \(p. 163\)}{section.A.7}% 333
\BOOKMARK [2][-]{subsection.A.7.10}{Exercise 9.6: Subroutine is-anagram \(p. 163\)}{section.A.7}% 334
\BOOKMARK [2][-]{subsection.A.7.11}{Exercise 9.7: Subroutine has-duplicates \(p. 163\)}{section.A.7}% 335
\BOOKMARK [2][-]{subsection.A.7.12}{Exercise 9.8: Simulating the Birthday Paradox \(p. 163\)}{section.A.7}% 336
\BOOKMARK [2][-]{subsection.A.7.13}{Exercise 9.9: Comparing push and unshift \(p. 163\)}{section.A.7}% 337
\BOOKMARK [2][-]{subsection.A.7.14}{Exercise 9.10: Bisection Search in a List \(p. 163\)}{section.A.7}% 338
\BOOKMARK [2][-]{subsection.A.7.15}{Exercise 9.11: Reverse Pairs \(p. 164\)}{section.A.7}% 339
\BOOKMARK [2][-]{subsection.A.7.16}{Exercise 9.12: Interlocking Words \(p. 164\)}{section.A.7}% 340
\BOOKMARK [1][-]{section.A.8}{Exercises of Chapter 10 \(Hashes\)}{appendix.A}% 341
\BOOKMARK [2][-]{subsection.A.8.1}{Exercise at the end of Section 10.1: A hash Is a Mapping \(p. 167\)}{section.A.8}% 342
\BOOKMARK [2][-]{subsection.A.8.2}{Exercise 10.1: Storing the Word List into a Hash \(p. 181\)}{section.A.8}% 343
\BOOKMARK [2][-]{subsection.A.8.3}{Exercise 10.2: Memoizing the Ackermann Function \(p. 181\)}{section.A.8}% 344
\BOOKMARK [2][-]{subsection.A.8.4}{Exercise 10.3: Finding Duplicates with a Hash \(p. 181\)}{section.A.8}% 345
\BOOKMARK [2][-]{subsection.A.8.5}{Exercise 10.4: Rotate Pairs \(p. 181\)}{section.A.8}% 346
\BOOKMARK [2][-]{subsection.A.8.6}{Exercise 10.5: Homophones \(p. 181\)}{section.A.8}% 347
\BOOKMARK [1][-]{section.A.9}{Exercises of Chapter 11}{appendix.A}% 348
\BOOKMARK [2][-]{subsection.A.9.1}{Exercise in Section 11.2: the given ... when Switch Statement \(p. 185\)}{section.A.9}% 349
\BOOKMARK [2][-]{subsection.A.9.2}{Exercise in Section 11.10: Constructing New Operators \(p. 194\)}{section.A.9}% 350
\BOOKMARK [2][-]{subsection.A.9.3}{Exercise in Section 11.11: Sets, Bags and Mixes \(p. 196\)}{section.A.9}% 351
\BOOKMARK [2][-]{subsection.A.9.4}{Exercise in Section 11.12: Random Words \(p. 197\)}{section.A.9}% 352
\BOOKMARK [2][-]{subsection.A.9.5}{Exercise in Section 11.13: Markov Analysis \(p. 199\)}{section.A.9}% 353
\BOOKMARK [2][-]{subsection.A.9.6}{Exercises on the Huffman Code in Section 11.18 \(p. 207\)}{section.A.9}% 354
\BOOKMARK [1][-]{section.A.10}{Exercises of Chapter 13: Regexes and Grammars}{appendix.A}% 355
\BOOKMARK [2][-]{subsection.A.10.1}{Exercise in Section 13.1: Getting the February Dates Right \(p. 254\)}{section.A.10}% 356
\BOOKMARK [2][-]{subsection.A.10.2}{Exercise 13.12 \(p. 269\): A Grammar for an Arithmetic Calculator}{section.A.10}% 357
\BOOKMARK [1][-]{section.A.11}{Exercises of Chapter 14: Functional Programming}{appendix.A}% 358
\BOOKMARK [2][-]{subsection.A.11.1}{Exercise 14.10: Making a Functional Implementation of Quick Sort\)}{section.A.11}% 359
